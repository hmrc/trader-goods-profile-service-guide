---
title: API reference
weight: 50
---

<%= partial 'documentation/partials/google_tag_manager_js' %>


# API reference

<div class="govuk-inset-text">
This API is in Beta and may have breaking changes.
</div>

This section details the APIs exposed in TGP and their specification.

## Authentication and Authorisation

Learn about the user-restricted [authentication][USER_AUTH] used by the API.

HMRC supports OAuth 2.0 for authenticating user restricted API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header. Find out more about [Authorisation][AUTHORISATION].

Flow type: authorizationCode

Authorization URL: <https://api.service.hmrc.gov.uk/oauth/authorize>

Token URL: <https://api.service.hmrc.gov.uk/oauth/token>

Refresh URL: <https://api.service.hmrc.gov.uk/oauth/refresh>

Required scopes: trader-goods-profiles

Learn more about the [Trader Goods Profile API endpoints][API_SPEC].

## Authorisation flow diagram
<a href="../images/TGP_Authorisation_and_Access_Flow.png" target="blank"><img src="../images/TGP_Authorisation_and_Access_Flow.png" alt="TGP Authorisation and Access Flow" style="width:720px;" /></a>

This explains the steps shown in the above diagram on the access flow for Trader Goods Profile API. The diagram illustrates how a trader would authorise the application. Then how intermediaries can access the TGP API without receiving the access token.

1. The trader authorises the application and picks their intermediary or agent
2. The application requests an access token from the authorisation server
3. The authorisation server issues the access token to the application
4. The application grants access to TGP to the intermediary or agent
5. The intermediary or agent requests access to TGP via the application
6. The application uses the access token on the intermediary or agent’s behalf to access the TGP API

The Intermediary or agent does not receive the access token directly. The application uses it on their behalf.

## Testing your Trader Goods Profile integration

### Using the Trader Goods Profile sandbox environment

The TGP sandbox provides a mix of dynamic and static behaviour, along with an Admin API. This combination of test endpoints allows you to test the creation and subsequent updates to goods records over the course of trader’s use of TGP.

### Dynamic endpoints

The TGP sandbox contains a test data store allowing you to create and manipulate data as part of the user journey. The following endpoints support dynamic behaviour:

- Create a TGP goods record
- Update a TGP goods record
- Get TGP goods records
- Get a single TGP goods record
- Remove a TGP goods record
- Maintain TGP profile

Records created and updated within the data store will persist for one year.

Schema validation is applied to the endpoints in the same way as the production endpoints, so attempting to create or update a record with invalid data will result in an error being returned.

### Creating a new TGP for test users in the dynamic sandbox

In the <u>sandbox environment only</u>, the Maintain TGP Profile endpoint can be used to create new TGPs for test users you’ve set up in the [Developer Hub][DEV_HUB].

To create a new TGP, you’ll need to use the test user’s EORI number as the eori in the request as well as the actorId. You’ll also need to provide a number matching the required format for a UKIMS number to create the profile. Optionally you can also provide dummy data in the correct format for NIRMS or NIPHL numbers.

Once created, you’ll be able to create and manipulate data for this test user’s EORI within the dynamic sandbox.

*Note: the Maintain TGP Profile can not be used to create new profiles in the production environment.*

### Static endpoints

The following endpoints do not provide dynamic behaviour:

- Request advice
- Withdraw advice

When testing the functionality for these endpoints you should refer to [Trader Goods Profile stubs][TGP_STUB] for details of test data.

### Admin API

*Note: The TGP Admin API exists purely within the sandbox environment and does not exist in the production environment.*

The Admin API allows you to update data values which are not typically possible from the client side. This is because they are applied by the HMRC systems in response to specific triggers or business rules.

- Commodity code has expired in Trade Tariff
    - a goods record should have the toReview value updated to true with a reviewReason of “The commodity code has expired. You’ll need to change the commodity code and categorise the goods.”

- Measures have changed in Trade Tariff
    - the goods record should have the toReview value updated to true with a reviewReason of “The restrictions have changed or there may be new restrictions. You need to categorise the record.”

- Record is locked due to an open advice request
    - the goods record should have the adviceStatus value updated to “Requested”, “In progress” or “Information requested” and the locked value should be true.

- Record has a different declarable state
    - the goods record should have the declarable value updated to “Ready for IMMI”, “Not ready for IMMI” or “Not ready for use”.

Refer to the Admin API endpoint specification for more information.

## Trader Goods Profile stubs

### Create Record Stub

Replace `{eori}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
POST https://<host>/customs/traders/goods-profiles/{eori}/records
```

#### Example request

```json
{
  "actorId": "GB098765432112",
  "traderRef": "BAN001001",
  "comcode": "10410100",
  "goodsDescription": "Organic bananas",
  "countryOfOrigin": "EC",
  "category": 1,
  "assessments": [
    {
      "assessmentId": "8ce911dcd4911c785a4d886919c74485",
      "primaryCategory": 1,
      "condition": {
        "type": "abc123",
        "conditionId": "Y923",
        "conditionDescription": "Products not considered as waste according to Regulation (EC) No 1013/2006 as retained in UK law",
        "conditionTraderText": "Excluded product"
      }
    }
  ],
  "supplementaryUnit": 500,
  "measurementUnit": "Square metre (m²)",
  "comcodeEffectiveFromDate": "2024-11-18T23:20:19Z",
  "comcodeEffectiveToDate": "2024-11-18T23:20:19Z"
}
```

### Update Record Stub

Replace `{eori}` and `{recordId}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
PATCH https://<host>/customs/traders/goods-profiles/{eori}/records/{recordId}
```

#### Example request

```json
{
  "actorId": "GB098765432112",
  "recordId": "8ebb6b04-6ab0-4fe2-ad62-e6389a8a204f",
  "traderRef": "BAN001001",
  "comcode": "10410100",
  "goodsDescription": "Organic bananas",
  "countryOfOrigin": "EC",
  "category": 3,
  "assessments": [
    {
      "assessmentId": "8ce911dcd4911c785a4d886919c74485",
      "primaryCategory": 1,
      "condition": {
        "type": "Document Code",
        "conditionId": "Y923",
        "conditionDescription": "Products not considered as waste according to Regulation (EC) No 1013/2006 as retained in UK law",
        "conditionTraderText": "Excluded product"
      }
    }
  ],
  "supplementaryUnit": 500,
  "measurementUnit": "square meters(m²)",
  "comcodeEffectiveFromDate": "2024-01-18T23:20:19Z",
  "comcodeEffectiveToDate": "2024-11-18T23:20:19Z"
}
```

### Get Record Stub

Replace `{eori}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
GET https://<host>/customs/traders/goods-profiles/{eori}/records
```

PAGINATION URL

```
GET https://<host>/customs/traders/goods-profiles/{eori}/records?lastUpdatedDate=2024-03-26T16:14:52Z&page=1&size=5
```

### Get Single Record Stub

Replace `{eori}` and `{recordId}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
GET https://<host>/customs/traders/goods-profiles/{eori}/records/{recordId}
```

### Remove Record Stub

Replace `{eori}` and `{recordId}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
PUT https://<host>/customs/traders/goods-profiles/{eori}/records/{recordId}
```

#### Example request

```json
{
  "actorId": "GB098765432112"
}
```

### Request Advice Stub

Replace `{eori}` and `{recordId}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
POST https://<host>/customs/traders/goods-profiles/{eori}/records/{recordId}/advice
```

| EORI to provide | Expected behaviour             | Status code |
|-----------------|--------------------------------|-------------|
| GB123456789011  | Advice request is created      | 201         |
| GB123456789012  | JSON payload is invalid        | 400         |
| GB123456789013  | Internal error response        | 500         |
| GB123456789014  | Unauthorised                   | 500         |
| GB123456789015  | Internal server error from EIS | 500         |
| GB123456789016  | Service unavailable            | 500         |
| GB123456789017  | Bad gateway                    | 500         |

#### Example request

```json
{
  "actorId": "GB987654321098",
  "requestorName": "Mr. Phil Edwards",
  "requestorEmail": "Phil.Edwards@gmail.com"
}
```

### Maintain Profile Stub

Replace `{eori}` in the URL with the values specified in the table below to simulate different scenarios and receive the corresponding responses.

```
PUT https://api.service.hmrc.gov.uk/customs/traders/goods-profiles/{eori}
```

#### Example request

```json
{
  "actorId": "GB987654321098",
  "ukimsNumber": "XIUKIM47699357400020231115081800",
  "nirmsNumber": "RMS-GB-123456",
  "niphlNumber": "S12345"
}
```

[USER_AUTH]: </api-documentation/docs/authorisation/user-restricted-endpoints>
[AUTHORISATION]: </api-documentation/docs/authorisation>
[API_SPEC]: </api-documentation/docs/api/service/trader-goods-profiles/1.0/oas/page>
[DEV_HUB]: </api-test-user>
[TGP_STUB]: </guides/trader-goods-profile-service-guide/documentation/API-reference.html#trader-goods-profile-stubs>
